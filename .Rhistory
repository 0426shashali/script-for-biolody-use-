??biocLite("RTN")
biocLite("RTN")
library(RedeR)
library(igraph)
library(RedeR)
`21plates_fold_change` <- read.csv("~/Desktop/home/script/21plates_fold_change.r", header=FALSE, comment.char="#")
View(`21plates_fold_change`)
source("https://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite("RTN")
source("http://bioconductor.org/biocLite.R")
biocLite("RTN")
library(RTN)
library(igraph)
library(RTN)
??RTN
??RTN
vignette("RTN")
help.start()
install.packages("PlotMultiDens")
library(ggplot2)
df <- data.frame(x = rnorm(1000, 0, 1), y = rnorm(1000,
0, 2), z = rnorm(1000, 2, 1.5))
df
head(df)
df.m <- melt(df)
??melt
install.packages(reshape2)
install.packages("reshape2")
install.packages("reshape2")
df.m <- melt(df)
library(reshape2)
df.m <- melt(df)
head(df.m)
head(df)
dim(df.m)
df.m
dim(df)
dim(df.m)
ggplot(df.m) + geom_freqpoly(aes(x = value,
y = ..density.., colour = variable))
library(ggplot2)
library(ggplot)
library(ggplot2)
ggplot(df.m) + geom_freqpoly(aes(x = value,
y = ..density.., colour = variable))
View(df.m)
View(x)
View(a)
View(df)
thred<-c(rep("a",3000))
thred
length(a)
length(thred)
df.m2<-cbind(df,thred)
View(df.m2)
dim(df.m2)
df.m3<-cbind(df.m,thred)
View(df.m3)
dim(df.m3)
dim(df.m)
tail(df.m3)
o<-rnorm(2000,0,1)
dim(o)
mode(o)
o
length(o)
o<-rnorm(1000,0,2.5)
o
dim(o)
length(o)
legend(x)
length(x)
dim(df.m3)
p<-c(rep("o",1000))
p
q<-c(rep("b",1000))
m<-cbind(p,o,q)
dim(m)
View(m)
dim(df.m3)
data<-rbind(df.m3,m)
data<-rbind(df.m3.m)
View(df.m3)
View(m)
View(df.m3)
View(m)
View(df.m3)
View(df.m3)
View(df.m)
View(df.m3)
View(m)
colnames(m)<-colnames(df.m3)
View(m)
data<-rbind(df.m3,m)
View(data)
ggplot(df.m) + geom_freqpoly(aes(x = value,
y = ..density.., colour = thred))
ggplot(data) + geom_freqpoly(aes(x = value,
y = ..density.., colour = thred))
q
qqqq
View(data)
dim(data)
ggplot(df.m) + geom_freqpoly(aes(x = value,y = ..density.., colour = thred))
ggplot(df.m) + geom_freqpoly(aes(x = value,y = ..density.., colour = data$thred))
ggplot(df.m) + geom_freqpoly(aes(x = value,y = ..density.., colour = as.factor(data$thred))
ggplot(df.m) + geom_freqpoly(aes(x = value,y = ..densi
ggplot(data) + geom_freqpoly(aes(x = value,y = ..density.., colour = as.factor(data$thred)))
ggplot(data) + geom_freqpoly(aes(x = value,y = ..density.., colour = variable))
ggplot(df.m) + geom_freqpoly(aes(x = value,
y = ..density.., colour = variable))
View(df.m)
View(df.m)
View(data)
View(a)
View(a)
View(data)
data2<-data[1:3]
View(data2)
data2<-data[1:2]
ggplot(data2) + geom_freqpoly(aes(x = value,y = ..density.., colour = variable))
View(a)
View(data)
View(df)
dim(df)
savehistory("~/Desktop/ggplot_density.r")
matrix(c(15,23,24,12,12,21),nc=2)->x
x
chisq.test(x,correct=TRUE)
??Chi-squared test
??Chi-square
??chisq.test
2548+198+8+3
2548+198+8+3＋11+1090+19792
2548+198+8+3＋11＋1090＋19792
2548+198+8+3＋11＋1090＋19792
2548+198+8+3+11+1090+19792
2548+198+8+3+11+1090+19792-2757
198/2757
1090/10893
1090/20893
??chisq.test
M <- as.table(rbind(c(762, 327, 468), c(484, 239, 477)))
M
dimnames(M)
dimnames(M) <- list(gender = c("M","F"),
party = c("Democrat","Independent", "Republican"))
M
Xsq <- chisq.test(M)
Xsq
x <- matrix(c(12, 5, 7, 7), ncol = 2)
x
chisq.test(x)
x <- matrix(c(12, 5, 7, 7), nrow = 2)
x
x <- matrix(c(2548, 19792, 198, 1090), ncol = 2)
x
chisq.test(x)
chisq.test
?chisq.test
chisq.test(x)[1]
chisq.test(x)[2]
chisq.test(x)[3]
history()
2138/26
2138/26＊3
2138/26＊3
82.23077*3
x <- matrix(c(1310, 17108, 124, 1518), ncol = 2)
chisq.test(x)
x <- matrix(c(5437, 25741, 1674, 5101), ncol = 2)
chisq.test(x)
x <- matrix(c(3809, 28469, 2111, 7379), ncol = 2)
chisq.test(x)
x <- matrix(c(2190, 45877, 468, 9330), ncol = 2)
chisq.test(x)
x <- matrix(c(1895, 28679, 202, 2645), ncol = 2)
chisq.test(x)
x <- matrix(c(3623, 45096, 442, 3290), ncol = 2)
chisq.test(x)
x <- matrix(c(8730, 39989, 1032, 2700), ncol = 2)
chisq.test(x)
x <- matrix(c(6900, 41819, 1083, 2647), ncol = 2)
chisq.test(x)
x <- matrix(c(6900, 41819, 1085, 2647), ncol = 2)
chisq.test(x)
x <- matrix(c(6775, 41944, 1044, 2688), ncol = 2)
chisq.test(x)
x <- matrix(c(3938, 38060, 996, 8529), ncol = 2)
chisq.test(x)
x <- matrix(c(2508, 39490, 747, 8778), ncol = 2)
chisq.test(x)
x <- matrix(c(2106, 39892, 378, 9147), ncol = 2)
chisq.test(x)
x <- matrix(c(1172, 21168, 170, 1118), ncol = 2)
chisq.test(x)
x <- matrix(c(3979, 14439, 367, 1275), ncol = 2)
chisq.test(x)
x <- matrix(c(18847, 12331, 4161, 2614), ncol = 2)
chisq.test(x)
x <- matrix(c(9601, 22676, 1883, 7607), ncol = 2)
chisq.test(x)
x <- matrix(c(790, 47277, 165, 9633), ncol = 2)
chisq.test(x)
x <- matrix(c(2784, 27790, 350, 2497), ncol = 2)
chisq.test(x)
x <- matrix(c(2689, 46030, 317, 3415), ncol = 2)
chisq.test(x)
x <- matrix(c(2822, 45897, 279, 3453), ncol = 2)
chisq.test(x)
x <- matrix(c(2276, 46443, 207, 3525), ncol = 2)
chisq.test(x)
x <- matrix(c(2401, 46318, 178, 3554), ncol = 2)
chisq.test(x)
x <- matrix(c(2740, 39258, 1098, 8427), ncol = 2)
chisq.test(x)
x <- matrix(c(1390, 40608, 647, 8878), ncol = 2)
chisq.test(x)
x <- matrix(c(3421, 38577, 2066, 7459), ncol = 2)
chisq.test(x)
x <- matrix(c(198, 2552, 348, 2739), ncol = 2)
chisq.test(x)
198/2552
348/2739
x <- matrix(c(124, 1310, 367, 3979), ncol = 2)
chisq.test(x)
x <- matrix(c(1674, 5437, 4161, 18847), ncol = 2)
chisq.test(x)
x <- matrix(c(2111, 3808, 1883, 9601), ncol = 2)
chisq.test(x)
x <- matrix(c(468, 2190, 165, 790), ncol = 2)
chisq.test(x)
x <- matrix(c(202, 1895, 350, 2784), ncol = 2)
chisq.test(x)
x <- matrix(c(442, 3623, 317, 2689), ncol = 2)
chisq.test(x)
x <- matrix(c(1032, 8730, 279, 2822), ncol = 2)
chisq.test(x)
x <- matrix(c(1085, 6906, 207, 2276), ncol = 2)
chisq.test(x)
x <- matrix(c(1044, 6775, 178, 2401), ncol = 2)
chisq.test(x)
x <- matrix(c(996, 3938, 1098, 2740), ncol = 2)
chisq.test(x)
x <- matrix(c(747, 2508, 647, 1390), ncol = 2)
chisq.test(x)
x <- matrix(c(378, 2106, 2066, 3421), ncol = 2)
chisq.test(x)
86230/4
21557.5^2
21557.5^2
21557.5*2
21557.5*3
46.96*1000000
46.96*1000000/67580
694.8801*2
13,617／2
13,617/2
13617/2
300000000／25166
300000000/25166
1237925946/310420701
1237950471/306509012
1237941229/305803221
1237950471/306509012
1238095840/305785741
1237932896/305846549
1237923179/306364126
526796036/195815672
641927718/219893758
641946135/220416923
642060492/236721912
638.1/76
8.396053/4
2.099013*10^9
2099013000/46866
125*2*2
10000000000/500
19990+12988
86688/4
21672*2
21672*3
86219/4
86199/4
21549.75*2
21549.75*3
75461/4
18865.25＊2
18865.25*2
18865.25*3
86103/4
21525.75＊2
21525.75*2
21525.75*3
86104/4
21526*2
21526*3
86995/4
21748.75＊2
21748.75*2
21748.75*3
library(e1071)
install.packages("e1071")
library(e1071)
data(cats, package="MASS")
inputData <- data.frame(cats[, c (2,3)], response = as.factor(cats$Sex))
View(inputData)
cats[, c (2,3)]
View(cats)
View(inputData)
svmfit <- svm(response ~ ., data = inputData, kernel = "linear", cost = 10, scale = FALSE)
mode(svmfit)
svmfit
plot(svmfit, inputData)
predict(svmfit)
compareTable <- table (inputData$response, predict(svmfit))
compareTable
mean(inputData$response != predict(svmfit))
svmfit <- svm(response ~ ., data = inputData, kernel = "radial", cost = 10, scale = FALSE)
print(svmfit)
plot(svmfit, inputData)
compareTable <- table (inputData$response, predict(svmfit))
compareTable
mean(inputData$response != predict(svmfit))
set.seed(100)
rowIndices <- 1 : nrow(inputData)
rowIndices
inputData
sampleSize <- 0.8 * length(rowIndices)
sampleSize
trainingRows <- sample (rowIndices, sampleSize)
trainingRows
trainingData <- inputData[trainingRows, ]
View(trainingData)
testData <- inputData[-trainingRows, ]
View(testData)
View(trainingData)
View(testData)
View(trainingData)
View(testData)
View(trainingData)
tuned <- tune.svm(response ~., data = trainingData, gamma = 10^(-6:-1), cost = 10^(1:2))
?tune.svm
??tune.svm
tuned
summary (tuned)
svmfit <- svm (response ~ ., data = trainingData, kernel = "radial", cost = 100, gamma=0.001, scale = FALSE)
svmfit
plot(svmfit, trainingData)
compareTable <- table (testData$response, predict(svmfit, testData))
compareTable
mean(testData$response != predict(svmfit, testData))
n_points_in_grid = 60
x_axis_range &lt;- range (inputData[, 2])
x_axis_range &lt;- range (inputData[, 2])
x_axis_range&lt;- range (inputData[, 2])
x_axis_range<-range (inputData[, 2])
x_axis_range
y_axis_range <- range (inputData[, 1])
y_axis_range
X_grid_points <- seq (from=x_axis_range[1], to=x_axis_range[2], length=n_points_in_grid)
X_grid_points
Y_grid_points <- seq (from=y_axis_range[1], to=y_axis_range[2], length=n_points_in_grid)
Y_grid_points
all_grid_points <- expand.grid (X_grid_points, Y_grid_points)
all_grid_points
names (all_grid_points) <- c(&quot;Hwt&quot;, &quot;Bwt&quot;)
all_points_predited <- predict(svmfit, all_grid_points)
svmfit
names (all_grid_points) <- c(quot,Hwt$quot,quot,Bwt$quot)
all_grid_points
View(all_grid_points)
all_points_predited <- predict(svmfit, all_grid_points)
all_points_predited <- predict(svmfit, all_grid_points)
View(cats)
View(inputData)
names (all_grid_points) <- c(inputData$Bwt,inputData$Hwt)
install.packages("varSelRF")
library(varSelRF)
library(parallel)
library(varSelRF)
install.packages("kernlab")
library(kernlab)
iris
library(lattice)
library(lattice)
xyplot(Petal.Length ~ Petal.Width, data = iris, groups = Species,auto.key=list(corner=c(1,0)))
View(a)
144/4
2200/20
2200/5
440/4
143/4
156/4
110＋35.75＋39
110+35.75+39
184.75*1000
library("kernlab")
data("iris")
irismodel <- ksvm(Species ~ ., data = iris,type = "C-bsvc", kernel = "rbfdot",kpar = list(sigma = 0.1), C = 10,prob.model = TRUE)
irismodel
predict(irismodel, iris[c(3, 10, 56, 68, 107, 120), -5], type = "probabilities")
